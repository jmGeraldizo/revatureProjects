[{"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/index.tsx":"1","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/reportWebVitals.ts":"2","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/App.tsx":"3","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/user/user.ts":"4","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/user/user.service.ts":"5","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/router.component.tsx":"6","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/user/login.component.tsx":"7","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/actions.ts":"8","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/reducer.ts":"9","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/tr.component.tsx":"10","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/trform.ts":"11","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/tr.service.ts":"12","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/thunks.ts":"13","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/table.component.tsx":"14","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/trrow.component.tsx":"15","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/details.component.tsx":"16","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/addclaim.component.tsx":"17","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/editstatus.component.tsx":"18","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/calcreimburse.component.tsx":"19","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/editclaim.component.tsx":"20"},{"size":849,"mtime":1610387377912,"results":"21","hashOfConfig":"22"},{"size":425,"mtime":1610047393086,"results":"23","hashOfConfig":"22"},{"size":808,"mtime":1610740745284,"results":"24","hashOfConfig":"22"},{"size":224,"mtime":1610849118877,"results":"25","hashOfConfig":"22"},{"size":1007,"mtime":1610748314960,"results":"26","hashOfConfig":"22"},{"size":3855,"mtime":1611119378510,"results":"27","hashOfConfig":"22"},{"size":1623,"mtime":1611122596912,"results":"28","hashOfConfig":"22"},{"size":1414,"mtime":1610823351912,"results":"29","hashOfConfig":"22"},{"size":1609,"mtime":1610833084986,"results":"30","hashOfConfig":"22"},{"size":842,"mtime":1611037867113,"results":"31","hashOfConfig":"22"},{"size":300,"mtime":1611095929334,"results":"32","hashOfConfig":"22"},{"size":992,"mtime":1611117603568,"results":"33","hashOfConfig":"22"},{"size":466,"mtime":1610466775409,"results":"34","hashOfConfig":"22"},{"size":1376,"mtime":1611035391459,"results":"35","hashOfConfig":"22"},{"size":479,"mtime":1611017939457,"results":"36","hashOfConfig":"22"},{"size":4275,"mtime":1611122528617,"results":"37","hashOfConfig":"22"},{"size":2613,"mtime":1611155242721,"results":"38","hashOfConfig":"22"},{"size":3565,"mtime":1611122273021,"results":"39","hashOfConfig":"22"},{"size":3085,"mtime":1611120804232,"results":"40","hashOfConfig":"22"},{"size":2668,"mtime":1611122016608,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"rq9egn",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"64"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"44"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"44"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/index.tsx",[],["88","89"],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/reportWebVitals.ts",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/App.tsx",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/user/user.ts",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/user/user.service.ts",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/router.component.tsx",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/user/login.component.tsx",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/actions.ts",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/reducer.ts",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/tr.component.tsx",["90"],"import React from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport './tr.css';\nimport { TRForm } from './trform';\n\ninterface TRProps {\n    data: TRForm;\n}\n\nfunction TRComponent(props: TRProps) {\n\n    // function goToClaim() {\n    //     history.push('/claims/'+props.data.employee_name);\n    // }\n\n    return (\n        <div className='col tr card'>\n            <p className='name'>Employee Name: {props.data.employee_name}</p>\n            <p className='eventtype'>Event Type: {props.data.event_type}</p>\n            <p className='date'>Date: {props.data.date}</p>\n            <p className='time'>Time: {props.data.time}</p>\n            <Link to={`/claims/${props.data.employee_name}`}>\n                {' '}\n                {props.data.status}{' '}\n            </Link>\n        </div>\n    );\n}\n\nexport default TRComponent;\n",["91","92"],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/trform.ts",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/tr.service.ts",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/thunks.ts",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/table.component.tsx",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/trrow.component.tsx",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/details.component.tsx",["93"],"import { useEffect } from 'react';\nimport { Link, useHistory } from 'react-router-dom';\nimport trService from './tr.service';\nimport { TRState, UserState } from '../reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeClaim } from '../actions';\nimport CalculateReimbursementComponent from './calcreimburse.component';\nimport './tr.css';\nimport { TRForm } from './trform';\n\ninterface DetailsProps {\n    match: any;\n}\n\nexport default function DetailsComponent(\n    props: DetailsProps\n) {\n    const trSelector = (state: TRState) => state.claim;\n    const cl = useSelector(trSelector);\n    const userContext = useSelector((state: UserState) => state.user);\n    console.log(userContext);\n    const dispatch = useDispatch();\n    const history = useHistory();\n\n    useEffect(() => {\n        console.log(props.match.params.id);\n        console.log(userContext);\n        console.log(props);\n        trService.getClaimByName(props.match.params.id).then((cl) => {\n            console.log('claim ' + cl);\n            dispatch(changeClaim(cl));\n        })\n    }, [dispatch, props.match.params.id]);\n\n    function handleDelete() {\n        trService.deleteClaim(cl.employee_name).then(() => {\n            dispatch(changeClaim(new TRForm()))\n            history.push('/claims');\n        });\n    }\n\n    return (\n        <div className='col tr card border border-dark'>\n            <div className='card-body'>\n                <p className='empname'>Employee Name : {cl.employee_name}</p>\n                <p className='evtype'>Event Type: {cl.event_type}</p>\n                <p className='date'>Date: {cl.date}</p>\n                <p className='time'>Time: {cl.time}</p>\n                <p className='location'>Location: {cl.location}</p>\n                <p className='desc'>Description: {cl.description}</p>\n                <p className='justification'>Justification: {cl.justification}</p>\n                <p className='status'>Status: {cl.status}</p>\n                Reimbursements: {userContext.reimbursements?.map((item) => {\n                    return (\n                        <>\n                            <p>Available: {item.available}</p>\n                            <p>Awarded: {item.awarded}</p>\n                            <p>Pending: {item.pending}</p>\n                        </>\n                    )\n                })}\n            </div>\n            {userContext.role === 'Employee' && (\n                <>\n                    <Link\n                        className='btn btn-outline-primary'\n                        to={'/claims/' + cl.employee_name + '/edit'}\n                    >\n                        Edit Claim\n                    </Link>\n                    <br/>\n                    <button className='btn btn-outline-danger' onClick={handleDelete}>\n                        Delete Claim\n                    </button>\n                </>\n            )}\n            {userContext.role === 'Supervisor' && cl.status === 'pending' && (\n                <>\n                    <Link\n                        className='btn btn-dark'\n                        to={'/claims/' + cl.employee_name + '/status'}\n                    >\n                        Supervisor Aprroval\n                    </Link>\n                </>\n            )}\n            {userContext.role === 'Department Head' && cl.status === 'supervisor approved' && (\n                <>\n                    <Link\n                        className='btn btn-outline-dark'\n                        to={'/claims/' + cl.employee_name + '/status'}\n                    >\n                        Department Head Approval\n                    </Link>\n                </>\n            )}\n            {userContext.role === 'BenCo' && (cl.status === 'department head approved' || cl.status === 'reimbursement pending') && (\n                <>\n                    <Link\n                        className='btn btn-outline-dark'\n                        to={'/claims/' + cl.employee_name + '/status'}\n                    >\n                        BenCo Approval\n                    </Link>\n                    <CalculateReimbursementComponent cost={cl.cost} evtype={cl.event_type} username={cl.employee_name}></CalculateReimbursementComponent>\n                </>\n            )}\n        </div>\n    );\n}","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/addclaim.component.tsx",[],"/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/editstatus.component.tsx",["94"],"import { SyntheticEvent, useEffect } from 'react';\nimport './tr.css';\nimport trService from './tr.service';\nimport { withRouter, useHistory } from 'react-router-dom';\nimport { RouteComponentProps } from 'react-router-dom';\nimport { TRState, UserState } from '../reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { changeClaim } from '../actions';\nimport { TRForm } from './trform';\n\ninterface Params {\n    id: string;\n}\n// Function Component\nfunction EditStatusComponent(props: RouteComponentProps<Params>) {\n    const trSelector = (state: TRState) => state.claim;\n    const claim = useSelector(trSelector);\n\n    const userContext = useSelector((state: UserState) => state.user);\n\n    const dispatch = useDispatch();\n    useEffect(() => {\n        console.log(props);\n        console.log(props.match.params.id);\n        trService.getClaimByName(props.match.params.id).then((rest) => {\n            console.log(rest);\n            dispatch(changeClaim(rest));\n        })\n    }, [dispatch, props, props.match.params.id]);\n    const FIELDS = ['status'];\n    const history = useHistory();\n    // This function is going to handle my onChange event.\n    // SyntheticEvent is how React simulates events.\n    function handleFormInput(e: SyntheticEvent) {\n        let c: any = { ...claim };\n        c[\n            (e.target as HTMLInputElement).name\n        ] = (e.target as HTMLInputElement).value;\n        console.log(c);\n        dispatch(changeClaim(c));\n    }\n    function submitForm() {\n        trService.updateStatus(claim).then(() => {\n            dispatch(changeClaim(new TRForm()));\n            console.log('Updating claim!')\n            // call the callback function from the parent component so that it will re-render\n            history.push('/claims');\n        });\n    }\n    return (\n        <div className='col tr card'>\n            {userContext.role === 'Supervisor' && (\n                <>\n                    <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\" name='status' onChange={handleFormInput}>\n                        <option>Approve/deny</option>\n                        <option value='denied'>deny</option>\n                        <option value='supervisor approved'>approve</option>\n                    </select>\n                </>\n            )}\n            {userContext.role === 'Department Head' && (\n                <>\n                    <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\" name='status' onChange={handleFormInput}>\n                        <option>Approve/deny</option>\n                        <option value='denied'>deny</option>\n                        <option value='department head approved'>approve</option>\n                    </select>\n                </>\n            )}\n            {userContext.role === 'BenCo' && (\n                <>\n                    <select className=\"form-select form-select-lg mb-3\" aria-label=\".form-select-lg example\" name='status' onChange={handleFormInput}>\n                        <option>Approve/deny</option>\n                        <option value='denied'>deny</option>\n                        <option value='waiting for grade'>approve for grading</option>\n                        <option value='BenCo approved'>approve</option>\n                    </select>\n                </>\n            )}\n            <button className='btn btn-outline-dark' onClick={submitForm}>\n                Edit Claim\n            </button>\n        </div>\n    );\n}\n\nexport default withRouter(EditStatusComponent)","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/calcreimburse.component.tsx",["95","96","97"],"import { useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport userService from '../user/user.service'\nimport { UserState } from '../reducer';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Reimbursements } from '../user/user';\n\ninterface ReimbursementProps {\n    cost: number;\n    evtype: string;\n    username: string;\n}\n\nexport default function CalculateReimbursementComponent(props: ReimbursementProps) {\n    const userContext = useSelector((state: UserState) => state.user);\n    // console.log(userContext);\n    //const dispatch = useDispatch();\n    const history = useHistory();\n    const total = 1000;\n\n    console.log(props);\n    let pendingReimbursement = 0;\n\n    function calculate() {\n        if (props.evtype === 'University Courses') {\n            pendingReimbursement = props.cost * 0.8;\n        } else if (props.evtype === 'Seminars') {\n            pendingReimbursement = props.cost * 0.6;\n        } else if (props.evtype === 'Certification Preparation Classes') {\n            pendingReimbursement = props.cost * 0.75;\n        } else if (props.evtype === 'Certification') {\n            pendingReimbursement = props.cost;\n        } else if (props.evtype === 'Technical Training') {\n            pendingReimbursement = props.cost * 0.9\n        } else {\n            pendingReimbursement = props.cost * 0.3;\n        }\n\n        return pendingReimbursement;\n    }\n    calculate()\n    let reim: Reimbursements = {\n        pending: pendingReimbursement,\n        available: total - pendingReimbursement,\n        awarded: pendingReimbursement\n    }\n    console.log(reim);\n    // useEffect(() => {\n    //     console.log(props);\n    //     userService.getClaimByName(props.username).then((user) => {\n    //         console.log(user);\n    //         dispatch(updateUser(user));\n    //     })\n    // }, [dispatch, props, props.username]);\n\n    function submitForm() {\n        userService.getClaimByName(props.username).then((user) => {\n            user.reimbursements?.forEach((us) => {\n\n                let reim: Reimbursements = {\n                    pending: pendingReimbursement,\n                    available: total - pendingReimbursement - us.awarded,\n                    awarded: us.awarded + pendingReimbursement\n                    }\n                })\n\n                user.reimbursements?.push(reim);\n                console.log(user.reimbursements);\n                userService.updateReimbursement(user).then(() => {\n                    //dispatch(updateUser(new User()));\n                    console.log('Updating reimbursements!')\n                    // call the callback function from the parent component so that it will re-render\n                    history.push(`claims/${props.username}`);\n                });\n            })    \n    }\n    console.log(userContext);\n    return (\n            <div>\n                <p>{pendingReimbursement}</p>\n                <button className='btn btn-outline-dark' onClick={submitForm}>\n                    Calculate Reimbursement\n            </button>\n            </div>\n        )\n    }\n","/Users/jmger/Desktop/2012-dec14-react/projectOne/jgeraldizo/trms-frontend/src/trForm/editclaim.component.tsx",[],{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":2,"column":16,"nodeType":"104","messageId":"105","endLine":2,"endColumn":26},{"ruleId":"98","replacedBy":"106"},{"ruleId":"100","replacedBy":"107"},{"ruleId":"108","severity":1,"message":"109","line":33,"column":8,"nodeType":"110","endLine":33,"endColumn":41,"suggestions":"111"},{"ruleId":"102","severity":1,"message":"112","line":30,"column":11,"nodeType":"104","messageId":"105","endLine":30,"endColumn":17},{"ruleId":"102","severity":1,"message":"113","line":1,"column":10,"nodeType":"104","messageId":"105","endLine":1,"endColumn":19},{"ruleId":"102","severity":1,"message":"114","line":5,"column":10,"nodeType":"104","messageId":"105","endLine":5,"endColumn":21},{"ruleId":"102","severity":1,"message":"115","line":60,"column":21,"nodeType":"104","messageId":"105","endLine":60,"endColumn":41},"no-native-reassign",["116"],"no-negated-in-lhs",["117"],"@typescript-eslint/no-unused-vars","'useHistory' is defined but never used.","Identifier","unusedVar",["116"],["117"],"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'props' and 'userContext'. Either include them or remove the dependency array.","ArrayExpression",["118"],"'FIELDS' is assigned a value but never used.","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'reim' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"119","fix":"120"},"Update the dependencies array to be: [dispatch, props, props.match.params.id, userContext]",{"range":"121","text":"122"},[1079,1112],"[dispatch, props, props.match.params.id, userContext]"]